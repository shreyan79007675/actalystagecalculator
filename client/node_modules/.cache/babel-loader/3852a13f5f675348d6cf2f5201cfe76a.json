{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shreyanreddykarla/Desktop/FullStack_Calculator-master/client/src/components/AgeStats.js\";\nimport Axios from 'axios';\nimport React, { Component, useState } from 'react';\n\nclass AgeStats extends Component {\n  dbsave(x) {\n    const request_Calculation = {\n      calculation: x\n    };\n    Axios.post('/api', request_Calculation).then(response => {\n      if (response.status === 200) {//alert('successfully');\n        // props.history.push('/');\n      } else {\n        alert('Failed ');\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    return;\n  }\n\n  timeSince(date) {\n    let today = new Date().getTime();\n    let other_date = new Date(date).getTime();\n    let difference = Math.abs(today - other_date);\n    let days = Math.floor(difference / (1000 * 3600 * 24));\n    let years = Math.floor(days / 365);\n    days -= years * 365;\n    let months = Math.floor(days / 31);\n    days -= months * 31;\n    return `${years} years ${months} months ${days} days`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Age:\", this.dbsave(this.timeSince(this.props.date))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AgeStats;","map":{"version":3,"sources":["/Users/shreyanreddykarla/Desktop/FullStack_Calculator-master/client/src/components/AgeStats.js"],"names":["Axios","React","Component","useState","AgeStats","dbsave","x","request_Calculation","calculation","post","then","response","status","alert","catch","error","console","log","timeSince","date","today","Date","getTime","other_date","difference","Math","abs","days","floor","years","months","render","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE/BG,EAAAA,MAAM,CAACC,CAAD,EAAG;AAIP,UAAMC,mBAAmB,GAAG;AAC1BC,MAAAA,WAAW,EAAEF;AADa,KAA5B;AAIAN,IAAAA,KAAK,CAACS,IAAN,CAAW,MAAX,EAAmBF,mBAAnB,EACCG,IADD,CACMC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,CAC7B;AACE;AACD,OAHD,MAGO;AACLC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACD;AACF,KARD,EAQGC,KARH,CAQSC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVD;AAWA;AAGD;;AAEDG,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd,QAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,QAAIC,UAAU,GAAG,IAAIF,IAAJ,CAASF,IAAT,EAAeG,OAAf,EAAjB;AACA,QAAIE,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASN,KAAK,GAAGG,UAAjB,CAAjB;AAEA,QAAII,IAAI,GAAGF,IAAI,CAACG,KAAL,CAAWJ,UAAU,IAAI,OAAO,IAAP,GAAc,EAAlB,CAArB,CAAX;AACA,QAAIK,KAAK,GAAGJ,IAAI,CAACG,KAAL,CAAWD,IAAI,GAAG,GAAlB,CAAZ;AACAA,IAAAA,IAAI,IAAIE,KAAK,GAAG,GAAhB;AACA,QAAIC,MAAM,GAAGL,IAAI,CAACG,KAAL,CAAWD,IAAI,GAAG,EAAlB,CAAb;AACAA,IAAAA,IAAI,IAAIG,MAAM,GAAG,EAAjB;AAEA,WAAQ,GAAED,KAAM,UAASC,MAAO,WAAUH,IAAK,OAA/C;AAED;;AAIDI,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,6BAGE;AAAA,2BAAS,KAAK1B,MAAL,CAAY,KAAKa,SAAL,CAAe,KAAKc,KAAL,CAAWb,IAA1B,CAAZ,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAtD8B;;AAyDjC,eAAef,QAAf","sourcesContent":["import Axios from 'axios';\nimport React, { Component, useState } from 'react';\n\n\nclass AgeStats extends Component {\n\n  dbsave(x){\n\n\n\n    const request_Calculation = {\n      calculation: x\n    }\n\n    Axios.post('/api', request_Calculation)\n    .then(response => {\n      if (response.status === 200) {\n      //alert('successfully');\n        // props.history.push('/');\n      } else {\n        alert('Failed ');\n      }\n    }).catch(error => {\n      console.log(error);\n    })\n    return \n\n\n  }\n  \n  timeSince(date) {\n    let today = new Date().getTime();\n    let other_date = new Date(date).getTime();\n    let difference = Math.abs(today - other_date);\n\n    let days = Math.floor(difference / (1000 * 3600 * 24));\n    let years = Math.floor(days / 365);\n    days -= years * 365;\n    let months = Math.floor(days / 31);\n    days -= months * 31;\n\n    return `${years} years ${months} months ${days} days`;\n\n  }\n  \n  \n\n  render() {\n    \n    return (\n      <div>\n        \n        \n        <h2>Age:{this.dbsave(this.timeSince(this.props.date))}</h2>\n      \n        \n      </div>\n    );\n  }\n}\n\nexport default AgeStats;\n"]},"metadata":{},"sourceType":"module"}